from PyQt5.QtWidgets import QGroupBox, QFormLayout, QLabel, QVBoxLayout, QHBoxLayout, QPushButton
from PyQt5.QtWidgets import QComboBox, QWidget, QMessageBox, QSizePolicy
from PyQt5.QtCore import QSettings
from PyQt5.QtGui import QFont

from voiceflow_to_json.settings_modifications.voiceflow_to_json import Voiceflow_To_Json
from voiceflow_to_json.json_to_dialplan.json_to_dialplan import Dialplan
import voiceflow_to_json.constants.asterisk_filepath_constants as asterisk_constants

from voiceflow_to_json.ui_modules.shared_buttons import BackButton


class ProjectWidget(QWidget):
    def __init__(self, voiceflow_api, headers):
        super().__init__()
        self.voiceflow_api = voiceflow_api
        self.headers = headers
        self.init_ui()

    def init_ui(self):
        self.layout = QVBoxLayout()
        self.form_layout = QFormLayout()
        self.error = False

        self.setup_heading()

        self.button_group = QGroupBox()
        self.layout.addWidget(self.button_group)
        self.v_box = QVBoxLayout()
        self.button_group.setLayout(self.v_box)

        self.setup_project_form()
        self.v_box.addLayout(self.form_layout)

        self.workspace_combo_box.addItem("Select")
        self.workspace_combo_box.addItems(self.workspace_names)

        self.setup_buttons()

        self.settings = QSettings("simplified_voiceflow", "GP_IVR_Settings")

        self.v_box.addLayout(self.create_ivr_button_layout)

        self.setLayout(self.layout)

    def setup_buttons(self):
        self.create_ivr_button_layout = QHBoxLayout()
        self.create_ivr_button = QPushButton('Get Config', self)
        self.create_ivr_button.setToolTip("Replace current IVR with new one, generated by the Voiceflow project")

        back_button_creator = BackButton()
        self.back_button = back_button_creator.create_back_button()

        self.create_ivr_button_layout.addWidget(self.back_button)
        self.create_ivr_button_layout.addWidget(self.create_ivr_button)

    def setup_project_form(self):
        self.workspace_combo_box = QComboBox(self)
        self.workspace_combo_box.setToolTip("Choose the workspace where your project is located on Voiceflow")

        self.projects_combo_box = QComboBox(self)
        self.projects_combo_box.setToolTip("Choose the Voiceflow project to be transferred into an IVR")

        self.set_projects()
        self.set_workspaces()
        self.form_layout.addRow('', QLabel())
        self.form_layout.addRow('Workspace:', self.workspace_combo_box)
        self.form_layout.addRow('', QLabel())
        self.form_layout.addRow('Projects:', self.projects_combo_box)
        grow_label = QLabel()
        self.form_layout.addRow('', grow_label)
        grow_label.setSizePolicy(QSizePolicy.Preferred, QSizePolicy.Expanding)

    def setup_heading(self):
        heading_font = QFont('Arial', 12)
        heading_font.setBold(True)

        heading = QLabel("Choose Workspace and Project:")
        heading.setFont(heading_font)
        self.layout.addWidget(QLabel())
        self.layout.addWidget(heading)

        page_info = QLabel("You can choose a Voiceflow project within a workspace to be used to generate your IVR")
        self.layout.addWidget(page_info)
        self.layout.addWidget(QLabel())

    def set_projects(self):
        self.projects = []
        self.project_names = []
        self.project_name = ""

    def set_workspaces(self):
        self.workspaces = self.voiceflow_api.get_workspaces(self.headers)
        self.workspace_name = ""
        self.workspace_names = self.voiceflow_api.get_workspace_names(self.workspaces)

    def create_ivr(self):
        if not self.project_name or self.project_name == "Select":
            msg = QMessageBox()
            msg.setIcon(QMessageBox.Critical)
            msg.setText("Error\n\nYou have not chosen a project")
            msg.setWindowTitle("Error")
            msg.exec_()
            self.error = True
            return

        voiceflow_json = Voiceflow_To_Json(self.workspace_name, self.project_name, self.headers)
        simplified_json = voiceflow_json.simplified_json()
        self.settings.setValue("simplified json", simplified_json)
        create_ivr = Dialplan(asterisk_constants.EXTENSIONS_CONF_PATH, simplified_json)
        create_ivr.create_config()

    def on_project_changed(self, value):
        self.project_name = value

    def on_workspace_changed(self, value):
        self.workspace_name = value
        workspace_id = self.voiceflow_api.get_workspace_id(value, self.workspaces)
        self.projects = self.voiceflow_api.get_projects(self.headers, workspace_id)
        project_names = self.voiceflow_api.get_project_names(self.projects)
        self.projects_combo_box.clear()
        self.projects_combo_box.addItem("Select")
        self.projects_combo_box.addItems(project_names)